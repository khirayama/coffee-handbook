mixin StoreCard(store, currentDay, openStatus, nextStatusMessage)
  .StoreCard
    .StoreCard--Content
      .StoreCard--Content--Name= store.name
      .StoreCard--Content--Address= store.address
      .StoreCard--Content--OpenStatus
        .StoreCard--Content--OpenStatus--Status= dic.t(`Pages.Maps.openStatus.${openStatus.status}`)
        .StoreCard--Content--OpenStatus--NextStatus= nextStatusMessage
        i.Icon expand_more
        .StoreCard--Content--OpenStatus--Description= dic.t(`Pages.Maps.openStatusDescription`)
      .StoreCard--Content--Hours
        ul.StoreCard--Content--Hours--List
          each hours, i in store.hours
            if hours.length
              each hour in hours
                li.StoreCard--Content--Hours--List--Item(class= (currentDay === i) ? 'StoreCard--Content--Hours--List--Item__Active' : '')
                  span.StoreCard--Content--Hours--List--Item--Day= dic.t(`Pages.Maps.day.${i}`)
                  span.StoreCard--Content--Hours--List--Item--Time= hour.join(' - ')
            else
              li.StoreCard--Content--Hours--List--Item(class= (currentDay === i) ? 'StoreCard--Content--Hours--List--Item__Active' : '')
                span.StoreCard--Content--Hours--List--Item--Day= dic.t(`Pages.Maps.day.${i}`)
                span.StoreCard--Content--Hours--List--Item--Time= dic.t(`Pages.Maps.closed`)
        if store.hoursNote
          span.StoreCard--Content--Hours--Note= store.hoursNote
      if store.email
        a.StoreCard--Content--Email(href=`mailto:${store.email}`)
          i.Icon email
          = store.email
      if store.tel
        a.StoreCard--Content--Tel(href=`tel:${store.tel}`)
          i.Icon call
          = store.tel
      ul.StoreCard--Content--Media
        each val, key in store.media
          if val
            li.StoreCard--Content--Media--Item.StoreCard--Content--Media--Item__Active
              a(href=val target="_blank")
                img(src=`images/icon_${key}.svg`)
          else
            li.StoreCard--Content--Media--Item
              span
                img(src=`images/icon_${key}.svg`)
      ul.StoreCard--Content--Services
        each val, key in store.services
          if val === 1
            li.StoreCard--Content--Services--Item.StoreCard--Content--Services--Item__Support
              .StoreCard--Content--Services--Item--Content
                .StoreCard--Content--Services--Item--Content--Text!= dic.t(`Pages.Maps.services.${key}`)
          else if val === 2
            li.StoreCard--Content--Services--Item.StoreCard--Content--Services--Item__PartialSupport
              .StoreCard--Content--Services--Item--Content
                .StoreCard--Content--Services--Item--Content--Text!= dic.t(`Pages.Maps.services.${key}`)
          else
            li.StoreCard--Content--Services--Item
              .StoreCard--Content--Services--Item--Content
                .StoreCard--Content--Services--Item--Content--Text!= dic.t(`Pages.Maps.services.${key}`)
      .StoreCard--Content--ServicesDescription
        span.StoreCard--Content--ServicesDescription--Label= dic.t('Pages.Maps.serviceDescription.notation')
        span.StoreCard--Content--ServicesDescription--Text.StoreCard--Content--ServicesDescription--Text__Support= dic.t('Pages.Maps.serviceDescription.support')
        span.StoreCard--Content--ServicesDescription--Text.StoreCard--Content--ServicesDescription--Text__PartialSupport= dic.t('Pages.Maps.serviceDescription.partialSupport')
        span.StoreCard--Content--ServicesDescription--Text= dic.t('Pages.Maps.serviceDescription.noSupport')
